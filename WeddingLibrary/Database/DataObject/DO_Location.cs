//------------------------------------------------------------------------------
// <auto-generated>
//     Date time = 2/11/2012 5:02:37 PM
//     This code was generated by tool,Version=2.0.1004.01.
//     Changes to this code may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using System.Collections.Generic;
using System.Text;
using DataAccess.Data;
using DataMapping;

namespace WeddingLibrary.Database.DataObject
{
    public class DO_Location : DOBase<DO_Location.UO_Location, DO_Location.UOList_Location>
    {
        public enum Columns
        {
            /// <summary>
            ///Primary Key,Database Type:varchar,Max Length:50,Is Nullable:NO
            /// </summary>
            BigDateCode,
            /// <summary>
            ///Primary Key,Database Type:varchar,Max Length:50,Is Nullable:NO
            /// </summary>
            LocationCode,
            /// <summary>
            ///Database Type:nvarchar,Max Length:100,Is Nullable:NO
            /// </summary>
            LocationName,
            /// <summary>
            ///Database Type:float,Is Nullable:YES
            /// </summary>
            Longitude,
            /// <summary>
            ///Database Type:float,Is Nullable:YES
            /// </summary>
            Latitude,
            /// <summary>
            ///Database Type:datetime,Is Nullable:NO,Default Value:(getdate())
            /// </summary>
            CreateOn,
            /// <summary>
            ///Database Type:varchar,Max Length:100,Is Nullable:NO
            /// </summary>
            CreateBy,
            /// <summary>
            ///Database Type:datetime,Is Nullable:YES
            /// </summary>
            UpdateOn,
            /// <summary>
            ///Database Type:varchar,Max Length:100,Is Nullable:YES
            /// </summary>
            UpdateBy,
        }
        public DO_Location()
        {
            ConnInfo = new ConnectionInformation("Location", Config.ConnectionKeys.Wedding, new string[] { "BigDateCode", "LocationCode" });
        }
        public class UO_Location : UOBase<UO_Location, UOList_Location>
        {
            #region Columns
            private string _BigDateCode;
            /// <summary>
            ///Primary Key,Database Type:varchar,Max Length:50,Is Nullable:NO
            /// </summary>
            [Mapping("BigDateCode,un-insert,un-update")]
            public string BigDateCode
            {
                get
                {
                    return _BigDateCode;
                }
                set
                {
                    _BigDateCode = value;
                }
            }
            private string _LocationCode;
            /// <summary>
            ///Primary Key,Database Type:varchar,Max Length:50,Is Nullable:NO
            /// </summary>
            [Mapping("LocationCode,un-insert,un-update")]
            public string LocationCode
            {
                get
                {
                    return _LocationCode;
                }
                set
                {
                    _LocationCode = value;
                }
            }
            private string _LocationName;
            /// <summary>
            ///Database Type:nvarchar,Max Length:100,Is Nullable:NO
            /// </summary>
            [Mapping("LocationName")]
            public string LocationName
            {
                get
                {
                    return _LocationName;
                }
                set
                {
                    _LocationName = value;
                }
            }
            private double _Longitude;
            /// <summary>
            ///Database Type:float,Is Nullable:YES
            /// </summary>
            [Mapping("Longitude")]
            public double Longitude
            {
                get
                {
                    return _Longitude;
                }
                set
                {
                    _Longitude = value;
                }
            }
            private double _Latitude;
            /// <summary>
            ///Database Type:float,Is Nullable:YES
            /// </summary>
            [Mapping("Latitude")]
            public double Latitude
            {
                get
                {
                    return _Latitude;
                }
                set
                {
                    _Latitude = value;
                }
            }
            private DateTime _CreateOn;
            /// <summary>
            ///Database Type:datetime,Is Nullable:NO,Default Value:(getdate())
            /// </summary>
            [Mapping("CreateOn,un-insert,un-update")]
            public DateTime CreateOn
            {
                get
                {
                    return _CreateOn;
                }
                set
                {
                    _CreateOn = value;
                }
            }
            private string _CreateBy;
            /// <summary>
            ///Database Type:varchar,Max Length:100,Is Nullable:NO
            /// </summary>
            [Mapping("CreateBy,un-update")]
            public string CreateBy
            {
                get
                {
                    return _CreateBy;
                }
                set
                {
                    _CreateBy = value;
                }
            }
            private DateTime _UpdateOn;
            /// <summary>
            ///Database Type:datetime,Is Nullable:YES
            /// </summary>
            [Mapping("UpdateOn,un-insert")]
            public DateTime UpdateOn
            {
                get
                {
                    return _UpdateOn;
                }
                set
                {
                    _UpdateOn = value;
                }
            }
            private string _UpdateBy;
            /// <summary>
            ///Database Type:varchar,Max Length:100,Is Nullable:YES
            /// </summary>
            [Mapping("UpdateBy,un-insert")]
            public string UpdateBy
            {
                get
                {
                    return _UpdateBy;
                }
                set
                {
                    _UpdateBy = value;
                }
            }
            #endregion

            public UO_Location()
            {
                ConnInfo = new DO_Location().ConnInfo;
            }
        }
        public class UOList_Location : CommonLibrary.ObjectBase.ListBase<UO_Location>
        {
            public UOList_Location()
            {
            }
        }
    }
}
